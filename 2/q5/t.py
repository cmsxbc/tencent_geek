import math
import requests
import re


def em(a, e, m):
    res = 1
    while e > 0:
        if e & 1:
            res = res * a % m
        a = a * a % m
        e = e >> 1
    return res


def calc(as_, bs, m):
    ret = 0
    for i in range(0, len(bs), 2):
        ret += em(bs[i], as_[i], m) * em(bs[i+1], as_[i+1], m) % m
    return ret % m


def get_asset(name):
    def _extract_numbers(s, n):
        print(s, codes[s+1:s+n*2:2])
        return int(''.join(map(chr, codes[s+1:s+n*2:2])))
    content = requests.get(f'http://159.75.70.9:8080/{name}.js').content.decode('utf-8')
    # content = 'var __TENCENT_CHAOS_STACK=function(){function __TENCENT_CHAOS_VM(f,e,c,r,l,g,s,a){var n=!r;f=+f,e=e||[0],r=r||[[this],[{}]],l=l||{};var t=[],o=null,u=[function(){r[r.length-2]=r[r.length-2]+r.pop()},,function(){r.push(undefined)},,function(){r.push("")},,function(){r.length=e[f++]},function(){r.push(!r.pop())},,,,,function(){var n=r.pop();r.push([r[r.pop()][0],n])},,,,function(){r.length-=e[f++]},,function(){r[r.length-2]=r[r.length-2]|r.pop()},function(){r.push([e[f++]])},function(){f=e[f++]},,function(){r[r[r.length-2][0]][0]=r[r.length-1]},,function(){var n=e[f++],t=n?r.slice(-n):[];r.length-=n;var o=r.pop();r.push(o[0][o[1]].apply(o[0],t))},function(){var n=e[f++];r[n]=r[n]===undefined?[]:r[n]},,,function(){var n=e[f++],t=r[r.length-2-n];r[r.length-2-n]=r.pop(),r.push(t)},function(){r.pop()},function(){var n=r.pop(),t=r.pop();r.push([t[0][t[1]],n])},function(){for(var o=e[f++],u=[],n=e[f++],t=e[f++],p=[],h=0;h<n;h++)u[e[f++]]=r[e[f++]];for(h=0;h<t;h++)p[h]=e[f++];r.push(function i(){var n=u.slice(0);n[0]=[this],n[1]=[arguments],n[2]=[i];for(var t=0;t<p.length&&t<arguments.length;t++)0<p[t]&&(n[p[t]]=[arguments[t]]);return __TENCENT_CHAOS_VM(o,e,c,n,l,g,s,a)})},,,function(){r.push(r[r.length-1])},function(){r.push(r[r.pop()[0]][0])},function(){r.push(r[e[f++]][0])},function(){var n=r.pop();r.push(n[0][n[1]])},,,,,,function(){var n=r[r.length-2];n[0][n[1]]=r[r.length-1]},,function(){r[r.length-2]=r[r.length-2]*r.pop()},function(){r.push(e[f++])},,,function(){r[r.length-2]=r[r.length-2]%r.pop()},,,function(){r[r.length-1]+=String.fromCharCode(e[f++])},function(){r[r.length-2]=r[r.length-2]>=r.pop()},function(){r.push([c,r.pop()])},,function(){r[r.length-1]=e[f++]},,,,,function(){var n=e[f++];r[r.length-1]&&(f=n)},,,,,,function(){return!0},,];for(0;;)try{for(var p=!1;!p;)p=u[e[f++]]();if(0,o)throw o;return n?(r.pop(),r.slice(3+__TENCENT_CHAOS_VM.v)):r.pop()}catch(i){0;var h=t.pop();if(h===undefined)throw i;o=i,f=h[0],r.length=h[1],h[2]&&(r[h[2]][0]=o)}}__TENCENT_CHAOS_VM.v=0;return __TENCENT_CHAOS_VM(0,[6,3,25,2,4,52,119,52,105,52,110,52,100,52,111,52,119,54,4,52,65,52,51,52,67,52,49,52,55,52,49,52,65,52,48,30,20,2426,6,7,25,2,25,3,25,4,25,5,25,6,19,4,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,0,24,1,22,19,5,46,0,22,28,0,19,6,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,1,24,1,22,28,0,16,6,19,5,35,19,3,4,52,97,12,46,0,30,37,53,7,61,123,29,20,243,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,57,52,53,52,48,52,50,52,52,52,57,52,54,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,103,19,5,46,0,22,28,0,29,29,19,5,35,19,3,4,52,97,12,46,1,30,37,53,7,61,272,29,20,392,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,53,52,55,52,48,52,51,52,53,52,48,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,252,19,4,34,35,36,6,0,22,28,0,19,4,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,46,0,22,28,0,19,6,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,1,24,1,22,28,0,16,8,19,5,35,19,3,4,52,97,12,46,2,30,37,53,7,61,511,29,20,631,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,54,52,48,52,57,52,54,52,53,52,50,52,56,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,491,19,5,46,0,22,28,0,29,29,19,5,35,19,3,4,52,97,12,46,3,30,37,53,7,61,660,29,20,780,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,51,52,54,52,51,52,56,52,56,52,56,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,640,19,4,34,35,36,6,0,22,28,0,19,4,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,46,0,22,28,0,19,6,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,1,24,1,22,28,0,16,8,19,5,35,19,3,4,52,97,12,46,4,30,37,53,7,61,899,29,20,1019,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,50,52,53,52,50,52,48,52,50,52,50,52,51,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,879,19,5,46,0,22,28,0,29,29,19,5,35,19,3,4,52,97,12,46,5,30,37,53,7,61,1048,29,20,1168,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,53,52,51,52,52,52,48,52,50,52,53,52,54,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,1028,19,4,34,35,36,6,0,22,28,0,19,4,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,46,0,22,28,0,19,6,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,1,24,1,22,28,0,16,8,19,5,35,19,3,4,52,97,12,46,6,30,37,53,7,61,1287,29,20,1407,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,57,52,52,52,53,52,55,52,55,52,52,52,50,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,1267,19,5,46,0,22,28,0,29,29,19,5,35,19,3,4,52,97,12,46,7,30,37,53,7,61,1436,29,20,1556,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,50,52,57,52,50,52,49,52,53,52,49,52,56,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,1416,19,4,34,35,36,6,0,22,28,0,19,4,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,46,0,22,28,0,19,6,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,1,24,1,22,28,0,16,8,19,5,35,19,3,4,52,97,12,46,8,30,37,53,7,61,1675,29,20,1795,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,55,52,56,52,56,52,50,52,52,52,51,52,54,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,1655,19,5,46,0,22,28,0,29,29,19,5,35,19,3,4,52,97,12,46,9,30,37,53,7,61,1824,29,20,1944,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,51,52,48,52,48,52,53,52,52,52,51,52,49,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,1804,19,4,34,35,36,6,0,22,28,0,19,4,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,46,0,22,28,0,19,6,4,52,66,52,105,52,103,52,73,52,110,52,116,54,46,1,24,1,22,28,0,16,8,19,5,35,19,3,4,52,97,12,46,10,30,37,53,7,61,2063,29,20,2183,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,52,52,56,52,52,52,49,52,49,52,52,52,49,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,2043,19,5,46,0,22,28,0,29,29,19,5,35,19,3,4,52,97,12,46,11,30,37,53,7,61,2212,29,20,2332,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,56,52,56,52,48,52,52,52,55,52,54,52,48,24,1,45,22,28,0,19,6,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,19,5,34,35,34,28,1,28,0,46,1,0,22,29,56,0,28,0,18,16,5,29,20,2192,19,4,34,35,36,6,0,22,28,0,19,4,34,35,4,52,66,52,105,52,103,52,73,52,110,52,116,54,4,52,49,52,49,52,50,52,53,52,56,52,57,52,57,52,57,52,48,52,54,52,56,52,52,52,50,52,53,52,57,52,55,24,1,49,22,28,0,4,52,112,52,97,52,114,52,115,52,101,52,73,52,110,52,116,54,36,4,24,1,67,2,67,16,4,31,38,0,1,3,43,28,0,2,67,29,29],window)}();__TENCENT_CHAOS_STACK.g=function(){return __TENCENT_CHAOS_STACK.shift()[0]};'
    codes = list(map(int, re.search(r'\[((\d+,)+\d+)\]', content).group(1).split(',')))
    poses = [142, 291, 530, 679, 918, 1067, 1306, 1455, 1694, 1843, 2082, 2231]
    bs = [_extract_numbers(pos, 7) for pos in poses]
    mod = _extract_numbers(181, 16)
    return bs, mod


def run(u):
    asset_cache = {}
    while True:
        params = requests.get(f"http://159.75.70.9:8081/pull?u={u}").json()
        if params['c'] not in asset_cache:
            asset_cache[params['c']] = get_asset(params['c'])
        ret = calc(params['a'], *asset_cache[params['c']])
        r = requests.get(f"http://159.75.70.9:8081/push?t={params['t']}&a={ret}").json()
        print(params['c'], params['t'], ret, r)
        if 'error' in r:
            print('wrong!!!', params)
            break
